name: OWASP ZAP Full Scan

on:
  workflow_dispatch:      # Allow manual trigger

permissions:
  contents: read
  security-events: write
  issues: write
  actions: read
  checks: write

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      # Build and start Java application
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Setup Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.8.2

      - name: Build and Start Java Application
        run: |
          cd java_wordstop
          mvn clean package
          # Start with explicit Java opts and redirect output
          java -Dserver.port=8080 -Dspring.profiles.active=test -jar target/*.jar > java_app.log 2>&1 &
          # Wait for application to start
          for i in {1..30}; do
            if curl -s http://localhost:8080/health > /dev/null; then
              echo "Java application started successfully"
              break
            fi
            if [ $i -eq 30 ]; then
              echo "Java application failed to start"
              cat java_app.log
              exit 1
            fi
            sleep 1
          done
          
      # Build and start Python application
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install Python dependencies and start app
        run: |
          cd python_wordstop
          pip install -r requirements.txt
          python wordstop.py &
          sleep 15  # Wait for Python app to start
      
      # Set up Docker
      - name: Set up Docker
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Run ZAP scan against Java application
      - name: ZAP Full Scan - Java Application
        uses: zaproxy/action-full-scan@v0.4.0
        continue-on-error: true
        with:
          target: 'http://localhost:8080'
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
          issue_title: 'ZAP Scan Report - Java Application'
          token: ${{ secrets.GITHUB_TOKEN }}
          
      # Run ZAP scan against Python application
      - name: ZAP Full Scan - Python Application
        uses: zaproxy/action-full-scan@v0.4.0
        continue-on-error: true
        with:
          target: 'http://localhost:5000'
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
          issue_title: 'ZAP Scan Report - Python Application'
          token: ${{ secrets.GITHUB_TOKEN }}
        
      # If you want to fail the build on certain alerts
      - name: Check ZAP Results
        run: |
          if grep -i "high" zap-full-scan.txt; then
            echo "High severity vulnerabilities found"
            exit 1
          fi
          
      # Upload ZAP Report as artifact
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: ZAP Full Scan Report
          path: |
            zap-full-scan.txt
            zap-full-scan.md
